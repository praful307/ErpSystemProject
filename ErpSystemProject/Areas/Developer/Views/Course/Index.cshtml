
    @{
        ViewData["Title"] = "Index";
        Layout = "~/Views/Shared/DeveloperLayout.cshtml";
    }



    <div class="container-fluid">
        <div class="row">
            <div class="col-md-8">
                <div class="card">
                    <div class="card-header">
                        <h3 class="text-center" style="color:darkblue">Add Training Course</h3>

                    </div>
                    <div class="card-body">
                        <div class="row">
                  
                            <div class="col-md-6">
                                <div class="mb-3">
                                  @Html.Hidden("txtid")
                                    <label class="form-label" style="color:darkblue">Course </label>
                             
                                    @Html.TextBox("txtname", null, new { @class = "form-control", placeholder = "Enter Course Name" })
                                </div>
                            </div>

                            <div class="col-md-6">
                                <div class="mb-3">
                                    <label class="form-label" style="color:darkblue"> Course Code</label>
                              
                                    @Html.TextBox("txtcode", null, new { @class = "form-control", placeholder = "Enter Course Name"})
                                </div>
                            </div>
                    
                        </div>
                        <div class="col-md-6">
                            <div class="mb-3">
                                <label class="form-label" style="color:darkblue"> Description</label>
                           
                                @Html.TextArea("txtdes", null, new { @class = "form-control", placeholder = "Enter Description"})
                            </div>
                        </div>
                    </div>
                    <div class="card-footer">
                        <input type="button" value="Submit" class="btn btn-primary" id="btnsubmit" onclick="AddCourse()" />
                        <input type="button" value="Update" id="btnupdate" class="btn btn-info" onclick="UdpateCustomer()" />

                    </div>
                

                </div>

            </div>


        </div>

    </div>
            &nbsp;
    <div class="input-group " style="width:500px;">
        <span class="input-group-text">
            <i class="bi bi-search"></i>
        </span>
        <input type="text" class="form-control" id="txtserch" placeholder="Search Here....">
    </div>


    &nbsp;
    <style>
        .scroll-table {
            max-height: 400px;
            overflow-y: auto;
            overflow-x: auto;
            display: block;
        }

            .scroll-table table thead th {
                position: sticky;
                top: 0;
                color: darkblue;
                z-index: 2;
            }
    </style>

    <div class="scroll-table">
        <table class="table table-bordered table-striped" style="min-width:800px;">
            <thead>
                <tr>
                    <th>Sr.No</th>
                    <th>Course</th>
                    <th>Course Code</th>
                    <th>Description</th>
                    <th>Action</th>
                </tr>
            </thead>
            <tbody id="tbldata">
            </tbody>
        </table>
    </div>






    <script>
 
         $("#txtserch").keyup(function () {
             var typeValue = $(this).val().toLowerCase(); 

         
             $("#tbldata tr").filter(function () {
                 $(this).toggle($(this).text().toLowerCase().indexOf(typeValue) > -1);
             });
         });


        const AddCourse= async()=>{
            debugger;
            var st={
                "CourseName": document.getElementById("txtname").value,
                "CourseCode": document.getElementById("txtcode").value,
                "Description": document.getElementById("txtdes").value
            }
              const url = '@Url.Action("AddCourse", "Course", new { area = "Developer" })';
            const response= await fetch(url,{
                method:'post',
          
                body:JSON.stringify(st),
                headers: {
                    'content-type': 'application/json' 
                }
  
            });
            const result= await response.json();
            alert("Course Added Successfully");
            window.location.reload();
            Display();
            clear();
        }
        const Display=async()=>{

            const response=await fetch("/Developer/Course/GetCourses");
            const co= await response.json();

            var data="";
            co.forEach(function(d,k){
                data+="<tr><td>"+(k+1)+"</td><td>"+d.courseName+"</td><td>"+d.courseCode+"</td><td>"+d.description+"</td><td><input type='button' value='View' class='btn btn-info' onclick='EditData("+d.courseId+")'/>    &nbsp;<input type='button' value='Delete' class='btn btn-danger' onclick='DeleteData("+d.courseId+")'/></td></tr>"
            })
            document.getElementById("tbldata").innerHTML=data;
        }
        const EditData=async(id)=>{

            debugger;
            const response= await fetch("/Developer/Course/GetCourseById/"+id);
            const cous= await response.json();
            console.log(cous);
            document.getElementById("txtid").value=cous.courseId;
            document.getElementById("txtname").value=cous.courseName;
            document.getElementById("txtcode").value=cous.courseCode;
            document.getElementById("txtdes").value=cous.description;
                       document.getElementById("btnupdate").removeAttribute("hidden");
              document.getElementById("btnsubmit").setAttribute("hidden","hidden");
      
        }
        const clear=()=>{
                    document.getElementById("btnsubmit").removeAttribute("hidden");
              document.getElementById("btnupdate").setAttribute("hidden","hidden");
        }
        const DeleteData = async(id)=> {
            if(confirm("Really want to delete course")) {
                const response = await fetch("/Developer/Course/DeleteCourse/"+id,{
                    method:'post',
                    headers:{
                        'content-type':'application/json'
                    }
                });
                const deleteco= await response.json();
                 alert("Course Delete Successfully");
                Display();
          
                window.location.reload();
            }
        }

        Display();
        clear();

    </script>