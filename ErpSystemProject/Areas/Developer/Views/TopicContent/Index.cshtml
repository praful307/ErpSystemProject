
@{
    ViewData["Title"] = "Index";
    Layout = "~/Views/Shared/DeveloperLayout.cshtml";
}

<link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css" rel="stylesheet">
<link href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.11.3/font/bootstrap-icons.css" rel="stylesheet">

<div class="container-fluid py-4" style="background-color:white;">
    <div class="row justify-content-center">
        <div class="col-md-10">
            <div class="card shadow-lg border-0 rounded-4">
                <div class="card-header text-center  bg-gradient text-white rounded-top-4" style="background-color:navy">
                    <h3 class="fw-semibold mb-0"><i class="bi bi-journal-text me-2"></i>Add Topic Wise Content</h3>
                </div>

                <div class="card-body px-5 py-4">
                    @Html.Hidden("txtcontnetid", null)

                    <div class="row g-4 align-items-end">
                        <!-- Topic Selection -->
                        <div class="col-md-4">
                            <label class="form-label fw-bold text-primary mb-1">Topic</label>
                            <select id="ddtopic" class="form-select shadow-sm text-center">
                                <option selected disabled>-- Select Topic --</option>
                            </select>
                        </div>

                        <!-- Content Name -->
                        <div class="col-md-4">
                            <label class="form-label fw-bold text-primary mb-1">Content Name</label>
                            @Html.TextBox("txtcontent", null, new { @class = "form-control shadow-sm", placeholder = "Enter Content" })
                        </div>

                        <!-- Content Description -->
                        <div class="col-md-8">
                            <label class="form-label fw-bold text-primary mb-1">Content Description</label>
                            @Html.TextArea("txtdes", null, new { @class = "form-control shadow-sm", placeholder = "Enter Description", rows = 2 })
                        </div>

                        <!-- Buttons -->
                        <div class="col-md-3 text-center">
                            <button type="button" class="btn btn-success px-4 py-2 rounded-pill shadow-sm fw-semibold me-2" id="btnsubmit" onclick="AddTopicContent()">
                                <i class="bi bi-check2-circle me-2"></i>Submit
                            </button>
                            <button type="button" class="btn btn-info px-4 py-2 rounded-pill shadow-sm fw-semibold" id="btnupdate" onclick="UpdateTopicContent()">
                                <i class="bi bi-arrow-repeat me-2"></i>Update
                            </button>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- Table Section -->
    <div class="row justify-content-center mt-5">
        <div class="col-md-12">
            <div class="card shadow-sm border-0 rounded-4">
                <div class="card-body p-0 scroll-table">
                    <table class="table table-bordered table-striped mb-0 text-center align-middle" style="min-width:800px;">
                        <thead class="table-primary">
                            <tr>
                                <th>Sr.No</th>
                                <th>Content Name</th>
                                <th>Topic Name</th>
                                <th>Description</th>
                                <th>Action</th>
                            </tr>
                        </thead>
                        <tbody id="tbldata"></tbody>
                    </table>
                </div>
            </div>
        </div>
    </div>
</div>

<!-- Scroll Table & Styling -->
<style>
    body {
        background-color: #eef3f9;
        font-family: 'Segoe UI', sans-serif;
    }

    .scroll-table {
        max-height: 400px;
        overflow-y: auto;
        overflow-x: auto;
        display: block;
    }

        .scroll-table table thead th {
            position: sticky;
            top: 0;
            z-index: 2;
            color: darkblue;
        }

    .btn:hover {
        transform: scale(1.03);
        transition: all 0.2s ease-in-out;
    }
</style>

<script>
          //===============================Update Content==================================
       const UpdateTopicContent=async()=>{
           debugger;
              var st={
              "ContentId":document.getElementById("txtcontnetid").value,
              "TopicId":document.getElementById("ddtopic").value,
              "ContentName":document.getElementById("txtcontent").value,
              "ContentDescription":document.getElementById("txtdes").value
              }
                 const response= await fetch("/Developer/TopicContent/UpdateContnet",{
              method:'post',
              body:JSON.stringify(st),
              headers:{
                  'content-type':'application/json'
              }
          })
          const content=  await response.json();

          alert("Contnet Update Successfully");
          window.location.reload();
       Display();
          cleardata();


      }
    //==================Get Topic DropDown===============
    const GetTopic=async()=>{

             const response = await fetch("/Developer/Topic/GetTopic");
             const topic = await response.json();
           
             var data="<option selected disabled>-- Select Topic--<option> "
             topic.forEach(function(d,k){

                  data+="<option value="+d.topicId+">"+d.topicName+"</option>"
             });
             document.getElementById("ddtopic").innerHTML=data;
    }
    GetTopic();

    //============================AddContent================================================
    const AddTopicContent=async()=>{
        debugger;
        var st={
            "TopicId":document.getElementById("ddtopic").value,
            "ContentName":document.getElementById("txtcontent").value,
            "ContentDescription":document.getElementById("txtdes").value
        };
        const response= await fetch("/Developer/TopicContent/AddContent",{
            method:'post',
            body:JSON.stringify(st),
            headers:{
                'content-type':'application/json'
            }
        })
        const content=  await response.json();
   
        alert("Contnet Added Successfully");
        window.location.reload();
     Display();
        cleardata();
    }
    //====================================DisplayContent ============================================

   const Display=async()=>{
         const response = await fetch("/Developer/TopicContent/GetTopicContents");
        const contents= await response.json();
        console.log(contents);
        var data="";
         contents.forEach(function(d,k){
                         data+="<tr><td>"+(k+1)+"</td><td>"+d.contentName+"</td><td>"+d.topicName+"</td><td>"+d.contentDescription+"</td><td><input type='button' value='View' class='btn btn-info' onclick='EditData("+d.contentId+")'/>    &nbsp;<input type='button' value='Delete' class='btn btn-danger' onclick='DeleteData("+d.contentId+")'/></td>></tr>";

         })
          document.getElementById("tbldata").innerHTML=data;


   }
    Display();
    //==========================Edit Data=====================================================

         const EditData=async(id)=>{

           const response = await fetch("/Developer/TopicContent/GetContnetById/"+id);
         const content= await response.json();
         console.log(content);

              document.getElementById("txtcontnetid").value=content.contentId;
           document.getElementById("ddtopic").value=content.topicId;       
           document.getElementById("txtcontent").value=content.contentName;
          document.getElementById("txtdes").value=content.contentDescription;
                 document.getElementById("btnupdate").removeAttribute("hidden");
           document.getElementById("btnsubmit").setAttribute("hidden","hidden");

     }
        //==================================Delete Content=====================================================

               const DeleteData = async(id)=> {
                  debugger;
             if(confirm("Really want to delete topic")) {
                       const response = await fetch("/Developer/TopicContent/DeleteContent/"+id,{
                     method:'post',
                     headers:{
                         'content-type':'application/json'
                     }
                 });
                 const deleteco= await response.json();
                    
                  alert("Topic Delete Successfully");
                   Display();
                 window.location.reload();
             }
         }

    //=====================================ClearData=========================================
    const clearData=()=>{

        document.getElementById("btnsubmit").removeAttribute("hidden")
        document.getElementById("btnupdate").setAttribute("hidden","hidden")
    }
    clearData();
</script>